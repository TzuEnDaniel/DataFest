View(tibble_cat)
tibble_catDate<-tibble_cat%>%
unite(NewDate,Year,Month,sep='-')
View(tibble_cat)
View(tibble_catDate)
GroupCate<-tibble_catDate%>%
group_by(NewDate,Category)%>%
summarise(count=n())
View(GroupCate)
write.csv(GroupCate, "PC:\\Users\\CloudMosa\\Desktop\\Penn state\\DataFest\\data\\\GroupCate.csv", row.names=FALSE)
write.csv(GroupCate, "Users\\CloudMosa\\Desktop\\Penn state\\DataFest\\data\\\GroupCate.csv", row.names=FALSE)
GroupCate<-as.data.frame(GroupCate)
write.csv(GroupCate, "Users\\CloudMosa\\Desktop\\Penn state\\DataFest\\data\\\GroupCate.csv", row.names=FALSE)
write.csv(GroupCate, "Users\\CloudMosa\\Desktop\\Penn state\\DataFest\\data\\GroupCate.csv", row.names=FALSE)
write.csv(GroupCate,"Users\\CloudMosa\\Desktop\\Penn state\\DataFest\\data\\GroupCate.csv", row.names=FALSE)
GroupCate<-as.data.frame(GroupCate)
write.csv(GroupCate,"Users\\CloudMosa\\Desktop\\Penn state\\DataFest\\data\\GroupCate.csv", row.names=FALSE)
write.csv(GroupCate,"Users\\CloudMosa\\Desktop\\Penn state\\DataFest\\data\\Group.csv", row.names=FALSE)
write.csv(GroupCate,".\\GroupCate.csv", row.names=FALSE)
View(GroupCate)
str(GroupCate)
GroupYear<-tibble_cat%>%
group_by(Year,Category)%>%
summarise(count=n())
View(GroupYear)
df_catCountPerMonth %>%
ggplot( aes(x=Month, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
View(GroupYear)
GroupYear %>%
ggplot( aes(x=Month, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
View(GroupYear)
write.csv(GroupYear,".\\GroupYear.csv", row.names=FALSE)
GroupYear<-read.csv('GroupYear.csv')
View(GroupYear)
GroupYear%>%
arrange(desc(Year,count))
GroupYear%>%
arrange(desc(Year),desc(count))
GroupYearDesc<-GroupYear%>%
arrange(desc(Year),desc(count))
View(GroupYearDesc)
GroupYearDesc<-GroupYear%>%
arrange(Year,count)
GroupYearDesc<-GroupYear%>%
arrange(Year,desc(count))
write.csv(GroupYear,".\\GroupYearDesc.csv", row.names=FALSE)
write.csv(GroupYearDesc,".\\GroupYearDesc.csv", row.names=FALSE)
View(tibble_cat)
GroupStateYear<-tibble_cat%>%
group_by(Year,StateAbbr)%>%
summarise(count=n())
View(GroupStateYear)
GroupStateYear<-tibble_cat%>%
filter(Year!='2012')%>%
group_by(Year,StateAbbr)%>%
summarise(count=n())
View(GroupStateYear)
GroupStateYear<-tibble_cat%>%
filter(Year='2021')%>%
group_by(Month,StateAbbr)%>%
arrange(Month,desc(count))%>%
summarise(count=n())
GroupStateYear<-tibble_cat%>%
filter(Year=='2021')%>%
group_by(Month,StateAbbr)%>%
arrange(Month,desc(count))%>%
summarise(count=n())
View(GroupStateYear)
GroupStateYear<-tibble_cat%>%
filter(Year=='2021')%>%
group_by(Month,StateAbbr)%>%
summarise(count=n())
View(GroupStateYear)
GroupStateYear%>%group_by(StateAbbr)%>%
summarise(count=n())
StateCount<-GroupStateYear%>%group_by(StateAbbr)%>%
summarise(count=n())
View(StateCount)
GroupStateYear<-tibble_cat%>%
filter(Year=='2021')%>%
group_by(Month,StateAbbr)%>%
filter(StateAbbr!='PA')%>%
summarise(count=n())
write.csv(GroupStateYear,".\\GroupStateYear.csv", row.names=FALSE)
GroupStateYear<-GroupStateYear%>%
arrange(Month,desc(count))
View(GroupStateYear)
write.csv(GroupStateYear,".\\GroupStateYear.csv", row.names=FALSE)
View(GroupStateYear)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
library(quanteda.textmodels)
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyverse)
datafest <- read.csv("questionposts.csv")
cateData <- read.csv('questions.csv')
pa_text <- filter(datafest, StateAbbr == "PA")
tibble_cat<-as_tibble(cateData)
tibble_cat<-tibble_cat%>%
separate(Date,into = c('Year','Month','Day'),sep='-')
tibble_catDate<-tibble_cat%>%
unite(NewDate,Year,Month,sep='-')
GroupCate<-tibble_catDate%>%
group_by(NewDate,Category)%>%
summarise(count=n())
GroupYear<-tibble_cat%>%
group_by(Year,Category)%>%
summarise(count=n())
GroupStateYear<-tibble_cat%>%
filter(Year=='2021')%>%
group_by(Month,StateAbbr)%>%
filter(StateAbbr!='PA')%>%
summarise(count=n())
StateCount<-GroupStateYear%>%group_by(StateAbbr)%>%
summarise(count=n())
str(GroupCate)
GroupYear<-read.csv('GroupYear.csv')
GroupYearDesc<-GroupYear%>%
arrange(Year,desc(count))
GroupCate$NewDate<-as.character(GroupCate)
GroupCate<-as.data.frame(GroupCate)
GroupStateYear<-GroupStateYear%>%
arrange(Month,desc(count))
df_cat<-as.data.frame(tibble_cat)
str(df_cat)
df_cat$Month<-factor(df_cat$Month)
ggplot(df_cat,
aes(x =Month )) +
geom_histogram()
df_catCountPerMonth<-df_cat%>%
group_by(Month,Category)%>%
summarise(count=n())
df_catCountPerState<-df_cat%>%
group_by(StateAbbr,Category)%>%
summarise(count=n())
ggplot(df_cat, aes(x = Month, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Month Frequency Plot")
ggplot(df_cat, aes(x = StateAbbr, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Frequency Plot Per State")
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
df_catCountPerMonth %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')+
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132"))
df_catCountPerMonth %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')+
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132"))
View(df_cat)
View(GroupYear)
View(GroupYearDesc)
View(pa_text)
View(datafest)
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')++
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132"))
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')+
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132"))
View(GroupYear)
ggplot(df_cat, aes(x = StateAbbr, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Frequency Plot Per State")
ggplot(df_cat, aes(x = Month, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Month Frequency Plot")
View(df_cat)
tibble_cat<-as_tibble(cateData)
tibble_cat<-tibble_cat%>%
separate(Date,into = c('Year','Month','Day'),sep='-')
library(tidyverse)
tibble_cat<-as_tibble(cateData)
View(tibble_cat)
tibble_cat<-tibble_cat%>%
separate(AskedOnUtc,into = c('Date','Time'),sep=11)
View(tibble_cat)
tibble_cat<-tibble_cat%>%
separate(Date,into = c('Year','Month','Day'),sep='-')
View(tibble_cat)
tibble_catDate<-tibble_cat%>%
unite(NewDate,Year,Month,sep='-')
GroupCate<-tibble_catDate%>%
group_by(NewDate,Category)%>%
summarise(count=n())
GroupYear<-tibble_cat%>%
group_by(Year,Category)%>%
summarise(count=n())
GroupStateYear<-tibble_cat%>%
filter(Year=='2021')%>%
group_by(Month,StateAbbr)%>%
filter(StateAbbr!='PA')%>%
summarise(count=n())
StateCount<-GroupStateYear%>%group_by(StateAbbr)%>%
summarise(count=n())
str(GroupCate)
GroupYear<-read.csv('GroupYear.csv')
GroupYearDesc<-GroupYear%>%
arrange(Year,desc(count))
GroupCate$NewDate<-as.character(GroupCate)
GroupStateYear<-GroupStateYear%>%
arrange(Month,desc(count))
df_cat<-as.data.frame(tibble_cat)
str(df_cat)
df_cat$Month<-factor(df_cat$Month)
ggplot(df_cat,
aes(x =Month )) +
geom_histogram()
ggplot(df_cat, aes(x = Month, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Month Frequency Plot")
ggplot(df_cat, aes(x = StateAbbr, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Frequency Plot Per State")
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')+
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132"))
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
ggplot(df_cat, aes(x = Month, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Month Frequency Plot")+
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
MonthFreqPlot<-ggplot(df_cat, aes(x = Month, fill  = Category)) +
geom_bar(stat='count') +
ggtitle("Month Frequency Plot")
MonthFreqPlot +  scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
data("diamonds")
#See that we've added "diamonds" to our global environment. Once we've loaded
#the diamonds dataset, we can view it using View:
View(diamonds)
diamonds %>% filter(cut == "Fair")
diamonds %>% filter(!cut == "Fair")
diamonds %>% select(cut, color)
#Create new variables with the mutate() functions. Often, this function will have
#other functions nested within
diamonds %>%
mutate(m = mean(price),     # calculates the mean price
sd = sd(price),      # calculates standard deviation
med = median(price)) # calculates the median price
diamonds2 <- diamonds %>%
group_by(clarity, cut) %>%
sample_frac(size = 0.1) %>%
ungroup()
## 1. The Data Layer -----
#### Specifies the data set to be plotted.
diamonds2 %>%
ggplot(data = diamonds2)
#### Can also be piped in!
diamonds2 %>%
ggplot()
## 2. The aesthetics (aes) layer -----
#### Specifies how we want to represent the variables in the plot.
p <- ggplot(data = diamonds2,
aes(x = carat,
y = price))
p
## 3. The geometry (geom) layer -----
#### Identifies how the data points will be represented.
p <- p + geom_point()
p
## 4. The facets layer -----
#### Divides the plot into subplots based on one or more discrete variables.
p <- p + facet_wrap(~ cut)
p
## 5. The statistics (stat) layer -----
#### Can be used to create and overlay subplots.
p <- p + stat_smooth(method = "lm")
p
## 6. The Coordinates (coord) Layer -----
#### Allows adjustment of the axes.
p <- p + coord_flip()
p
## 7. The Themes Layer -----
#### Modifies appearance.
p <- p + theme_bw()
p
p<- p + labs(x= "carat",
y = "price",
title = "The title of my Graph here")
p
plot1 <- ggplot(data = diamonds2,
aes(x = carat,
y = price)) +
geom_point() +
facet_wrap(~ cut) +
stat_smooth(method = "lm") +
coord_flip() +
theme_bw() +
labs(x= "carat",
y = "price",
title = "The title of my Graph here")
# Intermediate gg-Plotting -----
##Graphing the mean price of diamonds grouped by clarity and cut
diamonds2 %>%
group_by(clarity, cut) %>%
summarize(m = mean(price)) %>%
ggplot(aes(x = clarity, y = m, group = cut, color = cut)) +
geom_point() +
geom_line() +
facet_wrap(~cut) +
labs(x= "my x-axis label here",
y = "my y-axis label here",
title = "The title of my Graph here") +
theme_classic()
## 1. Aesthetics -----
#### For detailed information on aesthetics in ggplot:
vignette("ggplot2-specs")
#### You can also find geometry-specific aesthetics by querying the help for a geom element.
?geom_point()
### Colour Palettes ------
#### Create a ggplot object where the price variable is plotted against carat as a scatterplot
#### and cut defined by the colour aesthetic.
p <- ggplot(diamonds2,
aes(x = carat,
y = price,
colour = cut)) +
geom_point()
#### Generate the plot with default ggplot2 colors.
p
#### Change the colors to a pre-defined brewer palette.
p + scale_color_brewer(palette = "Set3")
#### Create a plot using manually selected colors.
p + scale_color_manual(values = c("red4",
"blue1",
"green4",
"yellow3",
"purple4"))
### Colour Palettes ------
#### Create a ggplot object where the price variable is plotted against carat as a scatterplot
#### and cut defined by the colour aesthetic.
p <- ggplot(diamonds2,
aes(x = carat,
y = price,
colour = cut)) +
geom_point()
#### Generate the plot with default ggplot2 colors.
p
#### Change the colors to a pre-defined brewer palette.
p + scale_color_brewer(palette = "Set3")
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')+
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
rlang::last_trace()
GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
YearCatPlot<-GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
YearCatPlot+
scale_color_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
GroupYear$Year<-factor(GroupYear$Year)
YearCatPlot<-GroupYear %>%
ggplot( aes(x=Year, y=count, group=Category, color=Category)) +
geom_line()+
ggtitle('Category line chart')
YearCatPlot
MonthFreqPlot +  scale_color_brewer(palette='Pastel1')
MonthFreqPlot +  scale_fill_brewer(palette='Pastel1')
YearCatPlot+
scale_fill_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
MonthFreqPlot +
scale_fill_manual(values = c("#ee8c68",
"#ba443c",
"#able3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
MonthFreqPlot +
scale_fill_manual(values = c("#ee8c68",
"#ba443c",
"#ab1e3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
YearCatPlot+
scale_fill_manual(values = c("#ee8c68",
"#ba443c",
"#ab1e3e",
"#96a46b",
"#72282b",
"#204132",
"#d07f62",
"#434a16",
"#984900",
"#69a68a"))
MonthFreqPlot
YearCatPlot
sd(56,6)
c<-c(56,6)
sd(c)
x<-c(7,10,7,9,9,3,20,15)
y<-c(9,13,10,11,10,4,25,17)
lm(y~x)
summary(lm(y~x))
anova(lm(y~x))
sd(y)
x<-c(44,4)
y<-c(56,6)
sd(y)
sd(y)*sd(y)
sum(y-1.29*x)
sum((y-1.29*x)^2)
336/500*280+164/500*110
